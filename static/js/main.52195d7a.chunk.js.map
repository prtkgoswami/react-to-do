{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","todoItems","setTodoItem","doneItems","setDoneItem","className","onSubmit","e","preventDefault","data","FormData","currentTarget","items","get","reset","type","name","placeholder","required","value","length","map","item","index","onClick","filter","_","i","icon","faTimes","faHeart","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPA6FeA,MAvFf,WACE,MAAiCC,mBAAS,CACN,6BACA,6BACA,kCAHpC,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,sDAAlB,SACE,mBAAGA,UAAU,4DAAb,2BAGF,qBAAKA,UAAU,8BAAf,SACE,uBAAMC,SAAU,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAO,IAAIC,SAASH,EAAEI,eAC5BT,GAAY,SAACU,GAAD,4BAAeA,GAAf,CAAsBH,EAAKI,IAAI,cAC3CN,EAAEI,cAAcG,SAJlB,UAME,uBAAOC,KAAK,OAAOC,KAAK,QAAQX,UAAU,kGAC1CY,YAAY,kBAAkBC,UAAQ,IACtC,uBAAOH,KAAK,SAASI,MAAM,WAAWd,UAAU,6IAIpD,sBAAKA,UAAU,oCAAf,UACE,qBAAKA,UAAU,2BAAf,SAA0C,mBAAGA,UAAU,8CAAb,uBAC1C,sBAAKA,UAAU,4CAAf,UACuB,GAApBJ,EAAUmB,QAAe,mBAAGf,UAAU,uCAAb,oCAExBJ,EAAUoB,KAAI,SAACC,EAAMC,GAAP,OAEZ,cADA,CACA,OAAKlB,UAAU,qCAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,mBAAGA,UAAU,iBAAiBmB,QAAS,WACrCtB,EAAYD,EAAUwB,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMJ,MAC7CnB,GAAY,SAACQ,GAAD,4BAAeA,GAAf,CAAsBU,QAFpC,SAIE,mBAAGjB,UAAS,aAAZ,SAA6BiB,QAGjC,wBAAQjB,UAAU,kFAAkFmB,QAAS,kBAC3GtB,EAAYD,EAAUwB,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMJ,OAD/C,SAGE,cAAC,IAAD,CAAiBK,KAAMC,oBAQnC,sBAAKxB,UAAU,oCAAf,UACE,qBAAKA,UAAU,2BAAf,SAA0C,mBAAGA,UAAU,8CAAb,wBAC1C,sBAAKA,UAAU,4CAAf,UACuB,GAApBF,EAAUiB,QAAe,mBAAGf,UAAU,uCAAb,oCAExBF,EAAUkB,KAAI,SAACC,EAAMC,GAAP,OACZ,sBAAKlB,UAAU,qCAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,mBAAGA,UAAU,iBAAiBmB,QAAS,WACrCpB,EAAYD,EAAUsB,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMJ,MAC7CrB,GAAY,SAACU,GAAD,4BAAeA,GAAf,CAAsBU,QAFpC,SAIE,mBAAGjB,UAAS,6BAAZ,SAA6CiB,QAGjD,wBAAQjB,UAAU,kFAAkFmB,QAAS,kBAC3GpB,EAAYD,EAAUsB,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMJ,OAD/C,SAGE,cAAC,IAAD,CAAiBK,KAAMC,oBAQnC,wBAAQxB,UAAU,wBAAlB,SACE,oBAAGA,UAAU,iBAAb,uBAAwC,cAAC,IAAD,CAAiBuB,KAAME,IAASzB,UAAU,iBAAlF,OAAsG,mBAAG0B,KAAK,gCAAR,qCC3E/FC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.52195d7a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport './App.css';\nimport Item from './Item'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faHeart } from '@fortawesome/free-solid-svg-icons'\n\nfunction App() {\n  const [todoItems, setTodoItem] = useState([\n                                      \"Sample Item For To-Do List\",\n                                      \"Click Item to Mark as Done\",\n                                      \"Click X Button to Delete Item\"\n                                    ]);\n  const [doneItems, setDoneItem] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"relative text-left w-100 px-2 py-2 md:px-20 md:py-4\">\n        <p className=\"text-2xl md:text-4xl font-medium text-green-400 uppercase\">React To-Do</p>\n      </header>\n\n      <div className=\"new-item py-3 px-2 md:px-20\">\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const data = new FormData(e.currentTarget);\n          setTodoItem((items) => [...items, data.get(\"title\")]);\n          e.currentTarget.reset();\n        }}>\n          <input type=\"text\" name=\"title\" className=\"w-full sm:w-2/3 py-2 px-2 md:px-4 md:mx-3 bg-transparent border-b text-white focus:outline-none\"\n          placeholder=\"Enter Item...  \" required/>\n          <input type=\"submit\" value=\"Add Item\" className=\"py-2 px-3 sm:inline-block hidden md:px-4 bg-gray-900 text-green-300 mx-3 uppercase transition-colors duration-300 hover:bg-gray-700\"/>\n        </form>\n      </div>\n\n      <div className=\"item-container py-3 px-5 md:px-40\">\n        <div className=\"title py-2 border-b mb-4\"><p className=\"text-xl font-light uppercase text-green-300\">Pending</p></div>\n        <div className=\"item-container flex flex-col items-center\">\n          {todoItems.length == 0 && <p className=\"p-5 text-green-100 text-md uppercase\">--- No Items Found ---</p>}\n          {\n            todoItems.map((item, index) => (\n              // <Item title={item, false}/>\n              <div className=\"w-full md:w-5/6 flex flex-row my-2\">\n                <div className=\"item-check py-2 px-5 flex-grow text-left\">\n                  <a className=\"cursor-pointer\" onClick={() => {\n                    setTodoItem(todoItems.filter((_, i) => i !== index));\n                    setDoneItem((items) => [...items, item]);\n                  }}>\n                    <p className={`text-white`}>{item}</p>\n                  </a>\n                </div>\n                <button className=\"py-2 px-5 text-white bg-red-700 transition-colors duration-300 hover:bg-red-500\" onClick={() => \n                  setTodoItem(todoItems.filter((_, i) => i !== index))\n                }>\n                  <FontAwesomeIcon icon={faTimes}/>\n                </button>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n      <div className=\"done-container py-3 px-5 md:px-40\">\n        <div className=\"title py-2 border-b mb-4\"><p className=\"text-xl font-light uppercase text-green-300\">Complete</p></div>\n        <div className=\"item-container flex flex-col items-center\">\n          {doneItems.length == 0 && <p className=\"p-5 text-green-100 text-md uppercase\">--- No Items Found ---</p>}\n          {\n            doneItems.map((item, index) => (\n              <div className=\"w-full md:w-5/6 flex flex-row my-2\">\n                <div className=\"item-check py-2 px-5 flex-grow text-left\">\n                  <a className=\"cursor-pointer\" onClick={() => {\n                    setDoneItem(doneItems.filter((_, i) => i !== index));\n                    setTodoItem((items) => [...items, item]);\n                  }}>\n                    <p className={`line-through text-gray-500`}>{item}</p>\n                  </a>\n                </div>\n                <button className=\"py-2 px-5 text-white bg-red-700 transition-colors duration-300 hover:bg-red-500\" onClick={() => \n                  setDoneItem(doneItems.filter((_, i) => i !== index))\n                }>\n                  <FontAwesomeIcon icon={faTimes}/>\n                </button>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n      <footer className=\"relative bottom-0 p-2\">\n        <p className=\"text-green-400\">Made with <FontAwesomeIcon icon={faHeart} className=\"text-red-500\"/> by <a href=\"http://prtkgoswami.github.io/\">Pratik Goswami</a></p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}